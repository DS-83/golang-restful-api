{
    "swagger": "2.0",
    "info": {
        "description": "REST API with custom JWT-based authentication system.\nCore functionality is about creating and managing storage of photos.",
        "title": "Example REST API server document",
        "contact": {},
        "version": "0.0.1"
    },
    "host": "localhost:8080",
    "basePath": "/",
    "paths": {
        "/api/photogramm/createalbum": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Create new album",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Create album",
                "parameters": [
                    {
                        "description": "album name",
                        "name": "album_name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.createInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/photogramm_delivery_http.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/photogramm_delivery_http.response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/photogramm_delivery_http.response"
                        }
                    }
                }
            }
        },
        "/api/photogramm/getalbum/{name}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get album by name",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Get album",
                "parameters": [
                    {
                        "type": "string",
                        "description": "album name",
                        "name": "name",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.PhotoAlbum"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/photogramm_delivery_http.response"
                        }
                    }
                }
            }
        },
        "/api/photogramm/getinfo": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get user storage summary info",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Get user info",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.User"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    }
                }
            }
        },
        "/api/photogramm/getphoto/{id}": {
            "get": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Get photo by id",
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Get photo",
                "parameters": [
                    {
                        "type": "string",
                        "description": "photo id",
                        "name": "id",
                        "in": "path",
                        "required": true
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/models.Photo"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/photogramm_delivery_http.response"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/photogramm_delivery_http.response"
                        }
                    }
                }
            }
        },
        "/api/photogramm/removealbum": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Remove album by name",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Remove album",
                "parameters": [
                    {
                        "description": "album name",
                        "name": "name",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.removeInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/photogramm_delivery_http.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/photogramm_delivery_http.response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/photogramm_delivery_http.response"
                        }
                    }
                }
            }
        },
        "/api/photogramm/removephoto": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Remove photo by id",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Remove photo",
                "parameters": [
                    {
                        "description": "photo id",
                        "name": "id",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.removeInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/photogramm_delivery_http.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "404": {
                        "description": "Not Found",
                        "schema": {
                            "$ref": "#/definitions/photogramm_delivery_http.response"
                        }
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/photogramm_delivery_http.response"
                        }
                    }
                }
            }
        },
        "/api/photogramm/upload": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Upload photo",
                "consumes": [
                    "multipart/form-data"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "api"
                ],
                "summary": "Upload photo",
                "parameters": [
                    {
                        "type": "file",
                        "description": "uploaded file data",
                        "name": "photo",
                        "in": "formData",
                        "required": true
                    },
                    {
                        "type": "string",
                        "description": "album name",
                        "name": "album_name",
                        "in": "formData"
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.uploadResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "401": {
                        "description": "Unauthorized"
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/photogramm_delivery_http.response"
                        }
                    }
                }
            }
        },
        "/auth/sign-in": {
            "post": {
                "security": [
                    {
                        "BasicAuth": []
                    }
                ],
                "description": "Sign in user based on login and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign in user",
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/http.signInResp"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/auth_delivery_http.response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/auth_delivery_http.response"
                        }
                    }
                }
            }
        },
        "/auth/sign-up": {
            "post": {
                "description": "Register user based on login and password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "auth"
                ],
                "summary": "Sign up user",
                "parameters": [
                    {
                        "description": "Username/Password",
                        "name": "credentials",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.userInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth_delivery_http.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request"
                    },
                    "404": {
                        "description": "Not Found"
                    },
                    "406": {
                        "description": "Not Acceptable",
                        "schema": {
                            "$ref": "#/definitions/auth_delivery_http.response"
                        }
                    },
                    "409": {
                        "description": "Conflict",
                        "schema": {
                            "$ref": "#/definitions/auth_delivery_http.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/delete": {
            "delete": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Delete authorized user account",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Delete user",
                "parameters": [
                    {
                        "description": "delete input",
                        "name": "delete",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.deleteInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth_delivery_http.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/auth_delivery_http.response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/auth_delivery_http.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        },
        "/user/update": {
            "post": {
                "security": [
                    {
                        "JWT": []
                    }
                ],
                "description": "Update username or password",
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "user"
                ],
                "summary": "Update user",
                "parameters": [
                    {
                        "description": "update",
                        "name": "update",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/http.updateInput"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/auth_delivery_http.response"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/auth_delivery_http.response"
                        }
                    },
                    "401": {
                        "description": "Unauthorized",
                        "schema": {
                            "$ref": "#/definitions/auth_delivery_http.response"
                        }
                    },
                    "500": {
                        "description": "Internal Server Error"
                    }
                }
            }
        }
    },
    "definitions": {
        "auth_delivery_http.response": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                }
            }
        },
        "http.createInput": {
            "type": "object",
            "properties": {
                "name": {
                    "type": "string"
                }
            }
        },
        "http.deleteInput": {
            "type": "object",
            "properties": {
                "delete": {
                    "type": "string"
                }
            }
        },
        "http.removeInput": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                }
            }
        },
        "http.signInResp": {
            "type": "object",
            "properties": {
                "token": {
                    "type": "string"
                }
            }
        },
        "http.updateInput": {
            "type": "object",
            "properties": {
                "update": {
                    "$ref": "#/definitions/http.userInput"
                }
            }
        },
        "http.uploadResp": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "string"
                }
            }
        },
        "http.userInput": {
            "type": "object",
            "properties": {
                "password": {
                    "type": "string"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.Photo": {
            "type": "object",
            "properties": {
                "album_name": {
                    "type": "string"
                },
                "photo_id": {
                    "type": "string"
                },
                "user_id": {
                    "type": "integer"
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "models.PhotoAlbum": {
            "type": "object",
            "properties": {
                "album_name": {
                    "type": "string"
                },
                "photos": {
                    "type": "array",
                    "items": {
                        "type": "string"
                    }
                },
                "total": {
                    "type": "integer"
                }
            }
        },
        "models.User": {
            "type": "object",
            "properties": {
                "id": {
                    "type": "integer"
                },
                "photo_albums": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/models.PhotoAlbum"
                    }
                },
                "username": {
                    "type": "string"
                }
            }
        },
        "photogramm_delivery_http.response": {
            "type": "object",
            "properties": {
                "response": {
                    "type": "string"
                }
            }
        }
    },
    "securityDefinitions": {
        "BasicAuth": {
            "type": "basic"
        },
        "JWT": {
            "description": "Description for what is this security definition being used",
            "type": "apiKey",
            "name": "Authorization",
            "in": "header"
        }
    }
}